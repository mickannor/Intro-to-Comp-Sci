# -*- coding: utf-8 -*-
#Part 2
"""
Created on Sun Sep 20 20:26:46 2020

@author: annorm
"""

import math
radius=input("Enter the gum ball radius (in.) => ")
print(radius)
radius=float(radius)
sales=int(input("Enter the weekly sales => "))
print(sales)

target_sales=math.ceil(sales*1.25)
edge=math.ceil(target_sales**(1/3))
diameter=radius*2
side=edge*diameter
total=edge**3
extra=total-target_sales


def find_volume_sphere(radius):
    return (((radius**3)*4*math.pi)/3)
def find_volume_cube(side):
    return ((side**3))

print(" ")
print("The machine needs to hold", edge, "gum balls along each edge.")
print("Total edge length is {:.2f}".format(side),"inches.")
print("Target sales were",str(target_sales)+", but the machine will hold",extra,"extra gum balls.")
waste=find_volume_cube(side)-(find_volume_sphere(radius)*target_sales)
wasted=find_volume_cube(side)-(find_volume_sphere(radius)*total)
print("Wasted space is {:.2f} cubic inches with the target number of gum balls,".format(waste),"\nor {:.2f} cubic inches if you fill up the machine.".format(wasted))



# -*- coding: utf-8 -*-
#Part 2
"""
Created on Mon Sep 21 18:42:15 2020

@author: annorm
"""
message=input("Enter a string to encode ==> ") 
print(message)
print(" ")
word=message

def encrypt(word):
    word=word.replace(" a","%4%")
    word=word.replace("he","7!")
    word=word.replace("e","9(*9(")
    word=word.replace("y","*%$")
    word=word.replace("u","@@@")
    word=word.replace("an","-?")
    word=word.replace("th","!@+3")
    word=word.replace("o","7654")
    word=word.replace("9","2")
    encryted_word=word.replace("ck","%4")
    return(encryted_word)
x=encrypt(word)
print("Encrypted as ==>",x)
print("Difference in length ==>", len(x)-len(message))

def decrypt(word):
    word=word.replace("%4","ck")
    word=word.replace("2","9")
    word=word.replace("7654","o")
    word=word.replace("!@+3","th")
    word=word.replace("-?","an")
    word=word.replace("@@@","u")
    word=word.replace("*%$","y")
    word=word.replace("9(*9(","e")
    word=word.replace("7!","he")
    decrypted_word=word.replace("%4%"," a")
    return(decrypted_word)
y=decrypt(x)  
print("Deciphered as ==>",y)

encrypt(word)
decrypt(word)

if y==message:
    print("Operation is reversible on the string.")
else:
    print("Operation is not reversible on the string.")
    
    
# -*- coding: utf-8 -*-
#Part 3
"""
Created on Wed Sep 23 14:40:05 2020

@author: annorm
"""
sentence=input("Enter a sentence => ")
print(sentence)
sentence=sentence.lower()

def number_happy(sentence):
    sentence.count("excellent")
    sentence.count("Excellent")
    sentence.count("good")
    sentence.count("Good")
    sentence.count("smile")
    sentence.count("Smile")
    sentence.count("laugh")
    sentence.count("Laugh")
    sentence.count("happiness")
    sentence.count("Happiness")
    sentence.count("love")
    sentence.count("Love")
    
happy_count=(sentence.count("excellent")+sentence.count("Love")+sentence.count("Happiness")+sentence.count("Excellent")+sentence.count("Good")+sentence.count("good")+sentence.count("smile")+sentence.count("Smile")+sentence.count("laugh")+sentence.count("Laugh")+sentence.count("love")+sentence.count("happiness"))

def number_sad(sentence):
    sentence.count("horrible")
    sentence.count("Horrible")
    sentence.count("sad")
    sentence.count("Sad")
    sentence.count("bad")
    sentence.count("Bad")
    sentence.count("terrible")
    sentence.count("Terrible")
    sentence.count("problem")
    sentence.count("Problem")
    sentence.count("hate")
    sentence.count("Hate")
    
sad_count=(sentence.count("horrible")+sentence.count("Hate")+sentence.count("Problem")+sentence.count("Terrible")+sentence.count("Bad")+sentence.count("Sad")+sentence.count("Horrible")+sentence.count("sad")+sentence.count("bad")+sentence.count("terrible")+sentence.count("problem")+sentence.count("hate"))

number_happy(sentence)
number_sad(sentence)
    
if happy_count>sad_count:
    print("Sentiment:","+"*happy_count,"\nThis is a happy sentence.")
elif happy_count==sad_count:
    print("Sentiment: "+"+"*happy_count+"-"*sad_count,"\nThis is a neutral sentence.")
elif sad_count>happy_count:
    print("Sentiment:",("+"*happy_count)+("-"*sad_count),"\nThis is a sad sentence.")
